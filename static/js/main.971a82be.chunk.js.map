{"version":3,"sources":["features/weather/components/FiveDaysForecast.module.css","App.module.css","features/weather/components/Favorites.module.css","features/weather/weatherAPI.js","features/weather/weatherSlice.js","WeatherAppBar.js","features/weather/components/FiveDaysForecast.js","features/weather/components/Home.js","features/weather/components/Favorites.js","App.js","app/store.js","index.js"],"names":["module","exports","apiKey","API_BASE_URL","autoCompleteUrl","autoComplete","q","fetch","encodeURI","then","res","a","json","getFiveDaysForecast","cityCode","autoCompleteAsync","createAsyncThunk","response","getCurrentCityForecastAsync","param","thunkAPI","currentCityCode","getState","weather","currentCity","Key","Promise","all","weatherSlice","createSlice","name","initialState","searchText","currentWeather","currentCityFiveDaysForecast","favorites","status","reducers","setSearchText","state","action","payload","toggleFavorite","currentCityName","LocalizedName","currentCityWeather","CityName","extraReducers","builder","addCase","pending","fulfilled","firstCity","actions","selectSearchText","selectCurrentCity","selectCurrentWeather","selectFavorites","selectFiveDaysForecast","RouteButton","styled","Button","backgroundColor","RouteLink","Link","textDecoration","WeatherAppBar","location","useLocation","AppBar","className","styles","variant","pathname","to","FiveDaysForecast","dispatch","useDispatch","useSelector","forecast","FavIcon","Favorite","FavoriteBorder","daysOfTheWeek","getDayOfTheWeek","dateStr","Date","parse","getDay","Container","ForecastContainer","ForecastTop","ForecastTopLeft","Temperature","Metric","Value","ForecastTopRight","onClick","ForecastMiddle","WeatherText","ForecastBottom","Card","ForecastCard","DailyForecasts","Maximum","Home","searchTxt","type","value","onChange","e","target","Favorites","favoritesHtml","key","push","favCard","id","favoritesId","App","useEffect","base","process","AppContent","path","element","store","configureStore","reducer","weatherReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.971a82be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ForecastContainer\":\"FiveDaysForecast_ForecastContainer__31_al\",\"ForecastTop\":\"FiveDaysForecast_ForecastTop__5fc0L\",\"ForecastTopLeft\":\"FiveDaysForecast_ForecastTopLeft__U-wwR\",\"ForecastTopRight\":\"FiveDaysForecast_ForecastTopRight__2ofKI\",\"ForecastMiddle\":\"FiveDaysForecast_ForecastMiddle__1pwpk\",\"ForecastBottom\":\"FiveDaysForecast_ForecastBottom__2BjyV\",\"ForecastCard\":\"FiveDaysForecast_ForecastCard__3QPH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"AppBar\":\"App_AppBar__E-uqS\",\"AppContent\":\"App_AppContent__3mllT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favorites\":\"Favorites_favorites__3dR75\",\"favoritesId\":\"Favorites_favoritesId__2_6__\",\"favCard\":\"Favorites_favCard__X1te_\"};","const apiKey = \"5N1aWnstEsgS8zOpcvsQGajjVwR86Cyj\";\nconst API_BASE_URL = \"https://dataservice.accuweather.com/\";\nconst autoCompleteUrl = \"locations/v1/cities/autocomplete\";\nconst getFiveDaysForecastUrl = \"forecasts/v1/daily/5day/\";\nconst getCurrentWeatherUrl = \"currentconditions/v1/\";\n\nexport function autoComplete(q = \"\") {\n  return fetch(\n    encodeURI(`${API_BASE_URL}${autoCompleteUrl}?apikey=${apiKey}&q=${q}`)\n  ).then(async (res) => await res.json());\n}\n\nexport function getFiveDaysForecast(cityCode) {\n  return fetch(\n    encodeURI(\n      `${API_BASE_URL}${getFiveDaysForecastUrl}${cityCode}?apikey=${apiKey}&metric=true`\n    )\n  ).then(async (res) => await res.json());\n}\n\nexport function getCityWeather(cityCode) {\n  return fetch(\n    encodeURI(\n      `${API_BASE_URL}${getCurrentWeatherUrl}${cityCode}?apikey=${apiKey}`\n    )\n  ).then(async (res) => await res.json());\n}\n\nexport function fetchCount() {}\n\n/**\n * [{\"Version\":1,\"Key\":\"215854\",\"Type\":\"City\",\"Rank\":31,\"LocalizedName\":\"Tel Aviv\",\"Country\":{\"ID\":\"IL\",\"LocalizedName\":\"Israel\"},\"AdministrativeArea\":{\"ID\":\"TA\",\"LocalizedName\":\"Tel Aviv\"}}]\n *\n */\n\n/*\n [{\n    \"LocalObservationDateTime\": \"2021-11-13T15:16:00+02:00\",\n    \"EpochTime\": 1636809360,\n    \"WeatherText\": \"Cloudy\",\n    \"WeatherIcon\": 7,\n    \"HasPrecipitation\": false,\n    \"PrecipitationType\": null,\n    \"IsDayTime\": true,\n    \"Temperature\": {\n        \"Metric\": {\n            \"Value\": 30,\n            \"Unit\": \"C\",\n            \"UnitType\": 17\n        },\n        \"Imperial\": {\n            \"Value\": 86,\n            \"Unit\": \"F\",\n            \"UnitType\": 18\n        }\n    },\n    \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\n}]\n */\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport {\n  autoComplete,\n  getFiveDaysForecast,\n  getCityWeather,\n} from \"./weatherAPI\";\n\nconst initialState = {\n  searchText: \"\",\n  currentCity: null,\n  currentWeather: null,\n  currentCityFiveDaysForecast: null,\n  favorites: {},\n  status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const autoCompleteAsync = createAsyncThunk(\n  \"weather/autoComplete\",\n  async (q) => {\n    const response = await autoComplete(q);\n    // The value we return becomes the `fulfilled` action payload\n    return response;\n  }\n);\n\nexport const getCurrentCityForecastAsync = createAsyncThunk(\n  \"weather/getCurrentCityForecast\",\n  async (param, thunkAPI) => {\n    const currentCityCode = thunkAPI.getState().weather.currentCity.Key;\n    return await Promise.all([\n      getCityWeather(currentCityCode),\n      getFiveDaysForecast(currentCityCode),\n    ]);\n  }\n);\n\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setSearchText: (state, action) => {\n      state.searchText = action.payload;\n    },\n    toggleFavorite: (state, action) => {\n      if (state.favorites?.[action.payload]) {\n        delete state.favorites[action.payload];\n      } else {\n        const currentCityName = state.currentCity.LocalizedName;\n        const currentCityWeather = {\n          ...state.currentWeather,\n          CityName: currentCityName,\n        };\n        state.favorites[action.payload] = currentCityWeather;\n      }\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(autoCompleteAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(autoCompleteAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        const firstCity = action.payload[0];\n        state.currentCity = firstCity;\n      })\n      .addCase(getCurrentCityForecastAsync.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(getCurrentCityForecastAsync.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.currentWeather = action.payload[0][0];\n        state.currentCityFiveDaysForecast = action.payload[1];\n      });\n  },\n});\n\nexport const { setSearchText, toggleFavorite } = weatherSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectSearchText = (state) => state.weather.searchText;\nexport const selectCurrentCity = (state) => state.weather.currentCity;\nexport const selectCurrentWeather = (state) => state.weather.currentWeather;\nexport const selectFavorites = (state) => state.weather.favorites;\nexport const selectFiveDaysForecast = (state) =>\n  state.weather.currentCityFiveDaysForecast;\nexport const selectFavoritesWeather = (state) => state.weather.favoritesWeather;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n//   if (currentValue % 2 === 1) {\n//     dispatch(incrementByAmount(amount));\n//   }\n// };\n\nexport default weatherSlice.reducer;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { AppBar, Button } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport styles from \"./App.module.css\";\n\nconst RouteButton = styled(Button)({\n  backgroundColor: \"white\",\n});\nconst RouteLink = styled(Link)({\n  textDecoration: \"none\",\n});\n\nexport default function WeatherAppBar() {\n  const location = useLocation();\n\n  return (\n    <AppBar>\n      <nav className={styles.AppBar}>\n        <RouteButton\n          variant={location.pathname === \"/\" ? \"contained\" : \"outlined\"}\n        >\n          <RouteLink to=\"/\">Home</RouteLink>\n        </RouteButton>\n        <RouteButton\n          variant={\n            location.pathname === \"/favorites\" ? \"contained\" : \"outlined\"\n          }\n        >\n          <RouteLink to=\"/favorites\">Favorites</RouteLink>\n        </RouteButton>\n      </nav>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Card } from \"@mui/material\";\nimport { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport {\n  selectCurrentCity,\n  selectFiveDaysForecast,\n  selectCurrentWeather,\n  selectFavorites,\n  toggleFavorite,\n} from \"../weatherSlice\";\nimport styles from \"./FiveDaysForecast.module.css\";\n\nexport default function FiveDaysForecast() {\n  const dispatch = useDispatch();\n  const currentCity = useSelector(selectCurrentCity);\n  const currentWeather = useSelector(selectCurrentWeather);\n  const forecast = useSelector(selectFiveDaysForecast);\n  const favorites = useSelector(selectFavorites);\n  const FavIcon = favorites?.[currentCity?.Key] ? Favorite : FavoriteBorder;\n  const daysOfTheWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  function getDayOfTheWeek(dateStr) {\n    return daysOfTheWeek[new Date(Date.parse(dateStr)).getDay()];\n  }\n\n  function onFavoriteClick() {\n    dispatch(toggleFavorite(currentCity.Key));\n  }\n\n  return (\n    <Container className={styles.ForecastContainer}>\n      <div className={styles.ForecastTop}>\n        <div className={styles.ForecastTopLeft}>\n          <div>{currentCity?.LocalizedName}</div>\n          <div>{currentWeather?.Temperature.Metric.Value}</div>\n        </div>\n        <div className={styles.ForecastTopRight}>\n          <FavIcon onClick={onFavoriteClick}></FavIcon>\n        </div>\n      </div>\n      <div className={styles.ForecastMiddle}>{currentWeather?.WeatherText}</div>\n      <div className={styles.ForecastBottom}>\n        <Card className={styles.ForecastCard}>\n          <div>{getDayOfTheWeek(forecast?.DailyForecasts[0].Date)}</div>\n          <div>{forecast?.DailyForecasts[0].Temperature.Maximum.Value}</div>\n        </Card>\n        <Card className={styles.ForecastCard}>\n          <div>{getDayOfTheWeek(forecast?.DailyForecasts[1].Date)}</div>\n          <div>{forecast?.DailyForecasts[1].Temperature.Maximum.Value}</div>\n        </Card>\n        <Card className={styles.ForecastCard}>\n          <div>{getDayOfTheWeek(forecast?.DailyForecasts[2].Date)}</div>\n          <div>{forecast?.DailyForecasts[2].Temperature.Maximum.Value}</div>\n        </Card>\n        <Card className={styles.ForecastCard}>\n          <div>{getDayOfTheWeek(forecast?.DailyForecasts[3].Date)}</div>\n          <div>{forecast?.DailyForecasts[3].Temperature.Maximum.Value}</div>\n        </Card>\n        <Card className={styles.ForecastCard}>\n          <div>{getDayOfTheWeek(forecast?.DailyForecasts[4].Date)}</div>\n          <div>{forecast?.DailyForecasts[4].Temperature.Maximum.Value}</div>\n        </Card>\n      </div>\n    </Container>\n  );\n}\n/*\n{\n    \"Headline\": {\n        \"EffectiveDate\": \"2021-11-18T01:00:00+09:00\",\n        \"EffectiveEpochDate\": 1637164800,\n        \"Severity\": 5,\n        \"Text\": \"Expect showery weather late Wednesday night through Thursday afternoon\",\n        \"Category\": \"rain\",\n        \"EndDate\": \"2021-11-18T19:00:00+09:00\",\n        \"EndEpochDate\": 1637229600,\n        \"MobileLink\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?lang=en-us\",\n        \"Link\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?lang=en-us\"\n    },\n    \"DailyForecasts\": [\n        {\n            \"Date\": \"2021-11-13T07:00:00+09:00\",\n            \"EpochDate\": 1636754400,\n            \"Temperature\": {\n                \"Minimum\": {\n                    \"Value\": 52,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                },\n                \"Maximum\": {\n                    \"Value\": 61,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                }\n            },\n            \"Day\": {\n                \"Icon\": 1,\n                \"IconPhrase\": \"Sunny\",\n                \"HasPrecipitation\": false\n            },\n            \"Night\": {\n                \"Icon\": 38,\n                \"IconPhrase\": \"Mostly cloudy\",\n                \"HasPrecipitation\": false\n            },\n            \"Sources\": [\n                \"AccuWeather\"\n            ],\n            \"MobileLink\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?lang=en-us\",\n            \"Link\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?lang=en-us\"\n        },\n        {\n            \"Date\": \"2021-11-14T07:00:00+09:00\",\n            \"EpochDate\": 1636840800,\n            \"Temperature\": {\n                \"Minimum\": {\n                    \"Value\": 51,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                },\n                \"Maximum\": {\n                    \"Value\": 66,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                }\n            },\n            \"Day\": {\n                \"Icon\": 3,\n                \"IconPhrase\": \"Partly sunny\",\n                \"HasPrecipitation\": false\n            },\n            \"Night\": {\n                \"Icon\": 33,\n                \"IconPhrase\": \"Clear\",\n                \"HasPrecipitation\": false\n            },\n            \"Sources\": [\n                \"AccuWeather\"\n            ],\n            \"MobileLink\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=1&lang=en-us\",\n            \"Link\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=1&lang=en-us\"\n        },\n        {\n            \"Date\": \"2021-11-15T07:00:00+09:00\",\n            \"EpochDate\": 1636927200,\n            \"Temperature\": {\n                \"Minimum\": {\n                    \"Value\": 53,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                },\n                \"Maximum\": {\n                    \"Value\": 66,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                }\n            },\n            \"Day\": {\n                \"Icon\": 1,\n                \"IconPhrase\": \"Sunny\",\n                \"HasPrecipitation\": false\n            },\n            \"Night\": {\n                \"Icon\": 36,\n                \"IconPhrase\": \"Intermittent clouds\",\n                \"HasPrecipitation\": false\n            },\n            \"Sources\": [\n                \"AccuWeather\"\n            ],\n            \"MobileLink\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=2&lang=en-us\",\n            \"Link\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=2&lang=en-us\"\n        },\n        {\n            \"Date\": \"2021-11-16T07:00:00+09:00\",\n            \"EpochDate\": 1637013600,\n            \"Temperature\": {\n                \"Minimum\": {\n                    \"Value\": 52,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                },\n                \"Maximum\": {\n                    \"Value\": 64,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                }\n            },\n            \"Day\": {\n                \"Icon\": 6,\n                \"IconPhrase\": \"Mostly cloudy\",\n                \"HasPrecipitation\": false\n            },\n            \"Night\": {\n                \"Icon\": 38,\n                \"IconPhrase\": \"Mostly cloudy\",\n                \"HasPrecipitation\": false\n            },\n            \"Sources\": [\n                \"AccuWeather\"\n            ],\n            \"MobileLink\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=3&lang=en-us\",\n            \"Link\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=3&lang=en-us\"\n        },\n        {\n            \"Date\": \"2021-11-17T07:00:00+09:00\",\n            \"EpochDate\": 1637100000,\n            \"Temperature\": {\n                \"Minimum\": {\n                    \"Value\": 52,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                },\n                \"Maximum\": {\n                    \"Value\": 64,\n                    \"Unit\": \"F\",\n                    \"UnitType\": 18\n                }\n            },\n            \"Day\": {\n                \"Icon\": 2,\n                \"IconPhrase\": \"Mostly sunny\",\n                \"HasPrecipitation\": false\n            },\n            \"Night\": {\n                \"Icon\": 34,\n                \"IconPhrase\": \"Mostly clear\",\n                \"HasPrecipitation\": true,\n                \"PrecipitationType\": \"Rain\",\n                \"PrecipitationIntensity\": \"Light\"\n            },\n            \"Sources\": [\n                \"AccuWeather\"\n            ],\n            \"MobileLink\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=4&lang=en-us\",\n            \"Link\": \"http://www.accuweather.com/en/jp/tokyo/226396/daily-weather-forecast/226396?day=4&lang=en-us\"\n        }\n    ]\n}\n*/\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport FiveDaysForecast from \"./FiveDaysForecast\";\nimport {\n  selectSearchText,\n  setSearchText,\n  autoCompleteAsync,\n  getCurrentCityForecastAsync,\n} from \"../weatherSlice\";\n\nexport default function Home() {\n  const searchTxt = useSelector(selectSearchText);\n  const dispatch = useDispatch();\n\n  function searchTxtChange(e) {\n    dispatch(setSearchText(e.target.value));\n    dispatch(autoCompleteAsync(e.target.value)).then((res) => {\n      dispatch(getCurrentCityForecastAsync());\n    });\n  }\n\n  return (\n    <div>\n      <input type=\"text\" value={searchTxt} onChange={searchTxtChange} />\n      <FiveDaysForecast />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectFavorites } from \"../weatherSlice\";\nimport { Container, Card } from \"@mui/material\";\nimport styles from \"./Favorites.module.css\";\n\nexport default function Favorites() {\n  const favorites = useSelector(selectFavorites);\n  let favoritesHtml = [];\n  for (const key in favorites) {\n    favoritesHtml.push(\n      <Card className={styles.favCard}>\n        <div>{favorites[key].CityName}</div>\n        <div>{favorites[key].Temperature.Metric.Value}</div>\n      </Card>\n    );\n  }\n\n  return (\n    <Container id={styles.favoritesId} className={styles.favorites}>\n      {favoritesHtml}\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setSearchText,\n  autoCompleteAsync,\n  getCurrentCityForecastAsync,\n} from \"./features/weather/weatherSlice\";\nimport WeatherAppBar from \"./WeatherAppBar\";\nimport Home from \"./features/weather/components/Home\";\nimport Favorites from \"./features/weather/components/Favorites\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setSearchText(\"Tel Aviv\"));\n    dispatch(autoCompleteAsync(\"Tel Aviv\")).then((res) => {\n      dispatch(getCurrentCityForecastAsync());\n    });\n  }, []);\n\n  return (\n    <div className={styles.App}>\n      <Router base={process.env.PUBLIC_URL}>\n        <WeatherAppBar />\n        <div className={styles.AppContent}>\n          <Routes>\n            <Route path=\"/favorites\" element={<Favorites />}></Route>\n            <Route path=\"/\" element={<Home />}></Route>\n          </Routes>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport weatherReducer from \"../features/weather/weatherSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    weather: weatherReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}